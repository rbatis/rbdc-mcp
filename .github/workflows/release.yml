name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: rbdc-mcp-linux-x86_64
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: rbdc-mcp-windows-x86_64.exe
          - target: x86_64-apple-darwin
            os: macos-latest
            name: rbdc-mcp-macos-x86_64
          - target: aarch64-apple-darwin
            os: macos-latest
            name: rbdc-mcp-macos-aarch64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libssl-dev

      - name: Build
        run: cargo build --release --target ${{ matrix.target }}

      - name: Prepare artifact (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p artifacts
          cp target/${{ matrix.target }}/release/rbdc-mcp artifacts/${{ matrix.name }}
          chmod +x artifacts/${{ matrix.name }}

      - name: Prepare artifact (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir artifacts
          copy target\${{ matrix.target }}\release\rbdc-mcp.exe artifacts\${{ matrix.name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: artifacts/${{ matrix.name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -la artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: |
            ## Changes in ${{ github.ref_name }}

            ### Downloads
            - **Linux (x86_64)**: rbdc-mcp-linux-x86_64
            - **Windows (x86_64)**: rbdc-mcp-windows-x86_64.exe
            - **macOS (Intel)**: rbdc-mcp-macos-x86_64
            - **macOS (Apple Silicon)**: rbdc-mcp-macos-aarch64

            ### Installation
            1. Download the appropriate binary for your platform
            2. Make it executable (Unix systems): `chmod +x rbdc-mcp-*`
            3. Run: `./rbdc-mcp-* --help`
          files: |
            artifacts/rbdc-mcp-linux-x86_64/rbdc-mcp-linux-x86_64
            artifacts/rbdc-mcp-windows-x86_64.exe/rbdc-mcp-windows-x86_64.exe
            artifacts/rbdc-mcp-macos-x86_64/rbdc-mcp-macos-x86_64
            artifacts/rbdc-mcp-macos-aarch64/rbdc-mcp-macos-aarch64
